{"version":3,"sources":["types/store/UserRegisterStateTypes.ts","Hooks/useTypedSelector.ts","Hooks/http.hook.ts","Hooks/useAlert.ts","Components/SignIn.tsx","Components/SignUpPage.tsx","dateFunctionts.ts","Components/LoggedUserPage.tsx","Components/MainPage.tsx","App.tsx","Store/userRegisterReducer.ts","types/store/UserLoginStateTypes.ts","Store/userLoginReducers.ts","types/store/MainPageStateTypes.ts","Store/mainPageReducer.ts","types/store/UserStateTypes.ts","Store/userDataReducer.ts","Store/index.ts","index.tsx"],"names":["UserRegisterActionTypes","useTypedSelector","useSelector","useHttp","useState","loading","setLoading","error","setError","request","useCallback","url","a","method","body","headers","JSON","stringify","fetch","response","json","data","ok","Error","msg","message","clearError","useAlert","withReactContent","Swal","SignIn","isMounted","setIsMount","dispatch","useDispatch","loginState","state","userLogin","loginFailed","mainPageInfo","SweetAlert","handleSignInBtn","event","preventDefault","email","password","type","payload","user","name","surname","id","_id","fire","title","console","log","useEffect","document","querySelectorAll","forEach","item","classList","toggle","className","placeholder","value","onChange","target","onClick","e","BackIco","icon","faArrowLeft","SignUpPage","userState","userRegister","registerFailed","setRegisterFailed","handleRegisterSubmit","months","addTaskIco","faPlus","deleteTaskIco","faMinusCircle","TaskItem","task","index","element","LoggedUserPage","userData","date","year","Date","getFullYear","month","getMonth","day","getDate","logOut","toLocaleDateString","window","navigator","language","weekday","length","map","disabled","MainPage","isUserLogged","signUpClicked","App","UserLoginActionTypes","defaultState","MainPageActionTypes","UserStateActionsTypes","rootReducer","combineReducers","action","ADD_NAME","ADD_SURNAME","ADD_EMAIL","ADD_PASSWORD","SET_USER_LOGIN","SET_LOGIN_FAILED","SET_SIGN_UP_CLICKED","ADD_NEW_USER_DATA","ADD_NEW_TODO","DELETE_ALL","CHANGE_TODO","newChangedData","DELETE_TODO","filter","INITIALIZE","Store","createStore","ReactDOM","render","store","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.29ea059c.chunk.js","sourcesContent":["export interface UserRegisterStateType {\r\n    name: string,\r\n    surname: string,\r\n    email: string,\r\n    password: string,\r\n    data: any[]\r\n}\r\n\r\nexport enum UserRegisterActionTypes {\r\n    ADD_NAME = \"ADD_NAME\",\r\n    ADD_SURNAME = \"ADD_SURNAME\",\r\n    ADD_EMAIL = \"ADD_EMAIL\",\r\n    ADD_PASSWORD = \"ADD_PASSWORD\"\r\n}\r\n\r\ninterface SetRegisterName {\r\n    type: UserRegisterActionTypes.ADD_NAME,\r\n    payload: string\r\n}\r\n\r\ninterface SetRegisterEmail {\r\n    type: UserRegisterActionTypes.ADD_EMAIL,\r\n    payload: string\r\n}\r\n\r\ninterface SetRegisterSurname {\r\n    type: UserRegisterActionTypes.ADD_SURNAME,\r\n    payload: string\r\n}\r\n\r\ninterface SetRegisterPassword {\r\n    type: UserRegisterActionTypes.ADD_PASSWORD,\r\n    payload: string\r\n}\r\n\r\nexport type UserRegisterAction = SetRegisterEmail | SetRegisterName | SetRegisterPassword | SetRegisterSurname","import {TypedUseSelectorHook, useSelector} from \"react-redux\";\r\nimport {RootState} from \"../Store\";\r\n\r\nexport const useTypedSelector: TypedUseSelectorHook<RootState> = useSelector;","import {useState, useCallback} from  'react'\r\n\r\n// interface UseHttpType {\r\n//     loading: boolean,\r\n//     request: (url: string, method: string, body: any, headers: object) => object\r\n//     error: any,\r\n//     clearError: object\r\n// }\r\n\r\nexport const useHttp = () => {\r\n    const [loading, setLoading] = useState<boolean>(false);\r\n    const [error, setError] = useState<string | null>(null);\r\n\r\n    const request = useCallback( async (url, method = 'GET', body = null, headers = {}) => {\r\n        try {\r\n            if (body) {\r\n                body = JSON.stringify(body);\r\n                headers['Content-Type'] = 'application/json';\r\n            };\r\n\r\n            setLoading(true);\r\n            const response = await fetch(url, {method, body, headers});\r\n            const data = await response.json();\r\n\r\n            if (!response.ok) {\r\n                throw new Error(data.msg || 'Something went wrong')\r\n            }\r\n\r\n            setLoading(false);\r\n            return data;\r\n        } catch (err) {\r\n            setLoading(false);\r\n            setError(err.message);\r\n            throw err;\r\n        }\r\n    }, []);\r\n\r\n    const clearError = useCallback(() => setError(null), [])\r\n\r\n    return {\r\n        loading,\r\n        request,\r\n        error,\r\n        clearError\r\n    }\r\n};","import Swal from 'sweetalert2';\r\nimport withReactContent from \"sweetalert2-react-content\";\r\n\r\nexport const useAlert = () => {\r\n    return withReactContent(Swal)\r\n}","import React, {FC, useEffect, useState} from 'react';\r\nimport {useDispatch} from \"react-redux\";\r\nimport {useHttp} from \"../Hooks/http.hook\";\r\nimport {useTypedSelector} from \"../Hooks/useTypedSelector\";\r\nimport { useAlert } from './../Hooks/useAlert';\r\n\r\nconst SignIn:FC = () => {\r\n    const [isMounted, setIsMount] = useState(false)\r\n    const {request} = useHttp();\r\n    const dispatch = useDispatch();\r\n    const loginState = useTypedSelector(state => state.userLogin)\r\n    const {loginFailed} = useTypedSelector(state => state.mainPageInfo)\r\n    const SweetAlert = useAlert()\r\n\r\n    const handleEmailInput = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        dispatch({type: \"ADD_EMAIL\", payload: event.target.value})\r\n    }\r\n\r\n    const handlePasswordInput = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        dispatch({type: \"ADD_PASSWORD\", payload: event.target.value})\r\n    }\r\n\r\n    const handleSignInBtn =  async (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\r\n        event.preventDefault();\r\n\r\n        if (!loginState.email || !loginState.password) {\r\n            dispatch({type: \"SET_LOGIN_FAILED\", payload: true})\r\n            return -1\r\n        }\r\n\r\n        try {\r\n            const data = await request('https://boiling-garden-79412.herokuapp.com/api/auth/login', 'POST', {...loginState});\r\n            const user = {\r\n                name: data.payload.name,\r\n                surname: data.payload.surname,\r\n                email: data.payload.email,\r\n                data: data.payload.data,\r\n                id: data.payload._id\r\n            }\r\n            dispatch({type: \"ADD_NEW_USER_DATA\", payload: user})\r\n            dispatch({type: \"SET_USER_LOGIN\", payload: true})\r\n            dispatch({type: \"SET_LOGIN_FAILED\", payload: false})\r\n        } catch (e) {\r\n            SweetAlert.fire({\r\n                title: <p>Incorrect Email or Password!</p>\r\n            })\r\n            dispatch({type: \"SET_LOGIN_FAILED\", payload: true})\r\n            console.log(e, \"Error while login fetch...\")\r\n        }\r\n    }\r\n\r\n    const handleSignUp = (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\r\n        e.preventDefault();\r\n        dispatch({type: \"SET_SIGN_UP_CLICKED\", payload: true})\r\n    }\r\n\r\n    useEffect(() => {\r\n        setIsMount(true)\r\n\r\n        if (isMounted && loginFailed) {\r\n            document.querySelectorAll('.signIn-form-label-input')\r\n                .forEach(item => item.classList.toggle('signIn-form-label-input--failed'));\r\n        }\r\n\r\n        return () => setIsMount(false)\r\n    }, [loginFailed, isMounted])\r\n\r\n    return (\r\n        <div className=\"signIn signIn-outer\">\r\n            <div className=\"signIn-inner container\">\r\n                <form className=\"signIn-form\">\r\n                    <h1 className=\"signIn-form-title\">\r\n                        Welcome to React Todo App!\r\n                    </h1>\r\n                    <label className=\"signIn-form-label\">\r\n                        <input\r\n                            className=\"signIn-form-label-input\"\r\n                            type=\"email\"\r\n                            placeholder=\"Email...\"\r\n                            value={loginState.email}\r\n                            onChange={handleEmailInput}\r\n                        />\r\n                    </label>\r\n                    <label className=\"signIn-form-label\">\r\n                        <input\r\n                            className=\"signIn-form-label-input\"\r\n                            type=\"password\"\r\n                            placeholder=\"Password...\"\r\n                            value={loginState.password}\r\n                            onChange={handlePasswordInput}\r\n                        />\r\n                    </label>\r\n                    <button\r\n                        className=\"signIn-form-btn\"\r\n                        onClick={handleSignInBtn}\r\n                        type=\"submit\"\r\n                    >\r\n                        Sign In\r\n                    </button>\r\n                    <button className=\"signIn-form-signUp\" onClick={handleSignUp}>\r\n                        You don't have an account? <span className=\"bolder\">Sign Up!</span>\r\n                    </button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SignIn;","import React, {useState, useEffect, FC} from 'react';\r\nimport {useDispatch} from \"react-redux\";\r\nimport {useTypedSelector} from \"../Hooks/useTypedSelector\";\r\nimport {useHttp} from \"../Hooks/http.hook\";\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faArrowLeft } from '@fortawesome/free-solid-svg-icons'\r\nimport { useAlert } from './../Hooks/useAlert';\r\n\r\nconst BackIco = <FontAwesomeIcon icon={faArrowLeft} />\r\n\r\nconst SignUpPage: FC = () => {\r\n    const {request} = useHttp();\r\n    const dispatch = useDispatch();\r\n    const userState = useTypedSelector(state => state.userRegister)\r\n    const [registerFailed, setRegisterFailed] = useState(false);\r\n    const SweetAlert = useAlert()\r\n\r\n    useEffect(() => {\r\n        if (registerFailed) {\r\n            document.querySelectorAll('.signUp-form-label-input')\r\n                .forEach(item => item.classList.toggle('signUp-form-label-input--failed'));\r\n        }\r\n    }, [registerFailed])\r\n\r\n    const handleNameInput = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        dispatch({type: \"ADD_NAME\", payload: event.target.value})\r\n    }\r\n\r\n    const handleSurnameInput = (event:React.ChangeEvent<HTMLInputElement>) => {\r\n        dispatch({type: \"ADD_SURNAME\", payload: event.target.value})\r\n    }\r\n\r\n    const handleLoginInput = (event:React.ChangeEvent<HTMLInputElement>) => {\r\n        dispatch({type: \"ADD_EMAIL\", payload: event.target.value})\r\n    }\r\n\r\n    const handlePasswordInput = (event:React.ChangeEvent<HTMLInputElement>) => {\r\n        dispatch({type: \"ADD_PASSWORD\", payload: event.target.value})\r\n    }\r\n\r\n    const handleRegisterSubmit = async (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\r\n        event.preventDefault();\r\n\r\n        if (!userState.name || !userState.surname || !userState.email || !userState.password) {\r\n            setRegisterFailed(true);\r\n            return\r\n        }\r\n\r\n        try {\r\n            const data = await request('https://boiling-garden-79412.herokuapp.com/api/auth/register', 'POST', {...userState});\r\n            console.log(data);\r\n            dispatch({type: \"SET_SIGNED_UP_CLICKED\", payload: false})\r\n        } catch (e) {\r\n            SweetAlert.fire({\r\n                title: <p>Please, enter valid data!</p>\r\n            })\r\n            setRegisterFailed(true);\r\n            console.log(e, \"Error, while register fetch...\");\r\n        }\r\n    }\r\n\r\n    const handleBackToMainPage = () => {\r\n        dispatch({type: \"SET_SIGN_UP_CLICKED\", payload: false})\r\n        dispatch({type: \"INITIALIZE\"})\r\n    }\r\n\r\n    return (\r\n        <div className=\"singUp signUp-outer\">\r\n            <div className=\"signUp-inner container\">\r\n                <div className=\"signUp-backToMainPage\" onClick={handleBackToMainPage}>\r\n                    {BackIco}\r\n                </div>\r\n                <form className=\"signUp-form\">\r\n                    <h1 className=\"signUp-form-title\">\r\n                        Create Account\r\n                    </h1>\r\n                    <label className=\"signUp-form-label\">\r\n                        <input\r\n                            className=\"signUp-form-label-input\"\r\n                            id=\"nameInput\"\r\n                            type=\"text\"\r\n                            placeholder=\"Name...\"\r\n                            value={userState.name}\r\n                            onChange={handleNameInput}\r\n                        />\r\n                    </label>\r\n                    <label className=\"signUp-form-label\">\r\n                        <input\r\n                            className=\"signUp-form-label-input\"\r\n                            id=\"surnameInput\"\r\n                            type=\"text\"\r\n                            placeholder=\"Surname...\"\r\n                            value={userState.surname}\r\n                            onChange={handleSurnameInput}\r\n                        />\r\n                    </label>\r\n                    <label className=\"signUp-form-label\">\r\n                        <input\r\n                            className=\"signUp-form-label-input\"\r\n                            id=\"emailInput\"\r\n                            type=\"email\"\r\n                            placeholder=\"Email...\"\r\n                            value={userState.email}\r\n                            onChange={handleLoginInput}\r\n                        />\r\n                    </label>\r\n                    <label className=\"signUp-form-label\">\r\n                        <input\r\n                            className=\"signUp-form-label-input\"\r\n                            id=\"passwordInput\"\r\n                            type=\"password\"\r\n                            placeholder=\"Password...\"\r\n                            value={userState.password}\r\n                            onChange={handlePasswordInput}\r\n                        />\r\n                    </label>\r\n                    <button\r\n                        onClick={handleRegisterSubmit}\r\n                        className=\"signUp-form-btn\"\r\n                        type=\"submit\"\r\n                    >\r\n                        Sign Up\r\n                    </button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SignUpPage;","export const months = [ \"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\r\n    \"July\", \"August\", \"September\", \"October\", \"November\", \"December\" ];\r\n\r\nexport const getWeekDay = () => {\r\n    const date = new Date();\r\n    return date.toLocaleDateString(window.navigator.language, {weekday: 'long'})\r\n}\r\n\r\nexport const getDate = () => {\r\n    const year = new Date().getFullYear();\r\n    const month = new Date().getMonth() + 1;\r\n    const day = new Date().getDate();\r\n    return {\r\n        year,\r\n        month,\r\n        day\r\n    }\r\n}","import React from 'react';\r\nimport {useDispatch} from \"react-redux\";\r\nimport {getDate, months, getWeekDay} from \"../dateFunctionts\";\r\nimport {useHttp} from \"../Hooks/http.hook\";\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport {faPlus, faMinusCircle, faArrowLeft} from '@fortawesome/free-solid-svg-icons'\r\nimport {useTypedSelector} from \"../Hooks/useTypedSelector\";\r\n\r\nconst addTaskIco = <FontAwesomeIcon icon={faPlus} />\r\nconst deleteTaskIco = <FontAwesomeIcon icon={faMinusCircle}/>\r\nconst BackIco = <FontAwesomeIcon icon={faArrowLeft} />\r\n\r\ntype TaskItemProps = {\r\n    task: string,\r\n    index: number\r\n}\r\n\r\nconst TaskItem = ({task, index}: TaskItemProps) => {\r\n    const dispatch = useDispatch();\r\n\r\n    const handleAddTaskChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        const element: HTMLInputElement = event.target;\r\n        if (!element) return\r\n        dispatch({type: \"CHANGE_TODO\", payload: {index, task: element.value}})\r\n    }\r\n\r\n    const handleDeleteTask = () => {\r\n        dispatch({type: \"DELETE_TODO\", payload: {index}})\r\n    }\r\n\r\n    return (\r\n        <label className=\"userPage-tasks-inner__item\">\r\n            <input\r\n                className=\"userPage-tasks-inner__item-input\"\r\n                id={`task${index}`}\r\n                type=\"text\"\r\n                onChange={handleAddTaskChange}\r\n                value={task}\r\n            />\r\n            <div onClick={handleDeleteTask} className=\"userPage-tasks-inner__item-delete\">\r\n                {deleteTaskIco}\r\n            </div>\r\n        </label>\r\n    )\r\n}\r\n\r\nconst LoggedUserPage = () => {\r\n    const {request} = useHttp();\r\n    const dispatch = useDispatch();\r\n    const userData = useTypedSelector(state => state.userData)\r\n    const date = getDate();\r\n\r\n    const addNewTask = () => {\r\n        dispatch({type: \"ADD_NEW_TODO\", payload: {task: \"New Todo\"}})\r\n    }\r\n\r\n    const clearTasks = () => {\r\n        dispatch({type: \"DELETE_ALL\"})\r\n    }\r\n\r\n    const logOut = async () => {\r\n        try {\r\n            const data = await request('https://boiling-garden-79412.herokuapp.com/api/saveuser', 'PATCH', {email: userData.email, data: userData.data})\r\n            console.log(data)\r\n        } catch (e) {\r\n            dispatch({type: \"SET_USER_LOGIN\", payload: false})\r\n            console.log(e, \"Error while fetching saving data...\")\r\n        }\r\n        dispatch({type: \"SET_USER_LOGIN\", payload: false})\r\n        dispatch({type: \"INITIALIZE\"})\r\n    }\r\n\r\n    return (\r\n        <div className=\"userPage userPage-outer\">\r\n            <div className=\"userPage-inner container\">\r\n                <div className=\"userPage-logOut\" onClick={logOut}>\r\n                    {BackIco}\r\n                </div>\r\n                <div className=\"userPage-title\">\r\n                    Hello {userData.name} {userData.surname}!\r\n                </div>\r\n                <div className=\"userPage-date\">\r\n                    <span className=\"bolder\">{getWeekDay()}</span>,&nbsp;\r\n                    {date.day} {months[date.month + 1]}\r\n                </div>\r\n                <div className=\"userPage__actions\">\r\n                    <div className=\"userPage__actions-item\" onClick={addNewTask}>\r\n                        {addTaskIco}\r\n                    </div>\r\n                    <div className=\"userPage__actions-item\" onClick={clearTasks}>\r\n                        {deleteTaskIco}\r\n                    </div>\r\n                </div>\r\n                <div className=\"userPage-tasks\">\r\n                    <div className=\"userPage-tasks-inner\">\r\n                        {\r\n                            userData.data?.length > 0 ? userData.data.map(\r\n                                (item, index) =>\r\n                                    <TaskItem\r\n                                        key={index}\r\n                                        index={index}\r\n                                        task={item.task}\r\n                                    />\r\n                            ) :\r\n                                <label className=\"userPage-tasks-inner__item\">\r\n                                    <input\r\n                                        placeholder=\"No Tasks for today!\"\r\n                                        type=\"text\"\r\n                                        className=\"userPage-tasks-inner__item-input\"\r\n                                        disabled\r\n                                    />\r\n                                </label>\r\n\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LoggedUserPage;","import React, {FC} from 'react';\r\nimport {useTypedSelector} from \"../Hooks/useTypedSelector\";\r\nimport SignIn from \"./SignIn\";\r\nimport SignUpPage from \"./SignUpPage\";\r\nimport LoggedUserPage from \"./LoggedUserPage\";\r\n\r\nconst MainPage: FC = () => {\r\n    const {isUserLogged, signUpClicked} = useTypedSelector(state => state.mainPageInfo)\r\n\r\n    return (\r\n        <main className=\"main main-outer\">\r\n            <div className=\"main-inner container\">\r\n                <div className=\"main-app\">\r\n                    {\r\n                        isUserLogged ?\r\n                            <LoggedUserPage/> :\r\n                            signUpClicked ?\r\n                                <SignUpPage/> :\r\n                                <SignIn/>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </main>\r\n    );\r\n};\r\n\r\nexport default MainPage;","import React from 'react';\r\n\r\n// Style\r\nimport './scss/App.scss';\r\nimport MainPage from \"./Components/MainPage\";\r\n\r\nconst App = () => {\r\n    return (\r\n        <MainPage/>\r\n    );\r\n};\r\n\r\nexport default App;","import {\r\n    UserRegisterAction,\r\n    UserRegisterActionTypes,\r\n    UserRegisterStateType\r\n} from \"../types/store/UserRegisterStateTypes\";\r\n\r\nconst defaultState: UserRegisterStateType = {\r\n    name: \"\",\r\n    surname: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    data: []\r\n}\r\n\r\nexport const userRegisterReducer = (state = defaultState, action: UserRegisterAction): UserRegisterStateType => {\r\n    switch (action.type) {\r\n        case UserRegisterActionTypes.ADD_NAME:\r\n            return {...state, name: action.payload}\r\n        case UserRegisterActionTypes.ADD_SURNAME:\r\n            return {...state, surname: action.payload}\r\n        case UserRegisterActionTypes.ADD_EMAIL:\r\n            return {...state, email: action.payload}\r\n        case UserRegisterActionTypes.ADD_PASSWORD:\r\n            return {...state, password: action.payload}\r\n        default:\r\n            return {...state}\r\n    }\r\n}\r\n","export interface UserLoginState {\r\n    email: string,\r\n    password: string\r\n}\r\n\r\nexport enum UserLoginActionTypes {\r\n    ADD_EMAIL = \"ADD_EMAIL\",\r\n    ADD_PASSWORD = \"ADD_PASSWORD\"\r\n}\r\n\r\ninterface SetUserEmail {\r\n    type: UserLoginActionTypes.ADD_EMAIL,\r\n    payload: string\r\n}\r\n\r\ninterface SetUserPassword {\r\n    type: UserLoginActionTypes.ADD_PASSWORD,\r\n    payload: string\r\n}\r\n\r\nexport type UserLoginAction = SetUserEmail | SetUserPassword;","import {UserLoginAction, UserLoginActionTypes, UserLoginState} from \"../types/store/UserLoginStateTypes\";\r\n\r\nconst defaultState: UserLoginState = {\r\n    email: \"\",\r\n    password: \"\"\r\n}\r\n\r\nexport const userLoginReducer = (state = defaultState, action: UserLoginAction): UserLoginState => {\r\n    switch (action.type) {\r\n        case UserLoginActionTypes.ADD_EMAIL:\r\n            return {...state, email: action.payload}\r\n        case UserLoginActionTypes.ADD_PASSWORD:\r\n            return {...state, password: action.payload}\r\n        default:\r\n            return {...state}\r\n    }\r\n}\r\n","export interface MainPageStateTypes {\r\n    isUserLogged: boolean,\r\n    loginFailed: boolean,\r\n    signUpClicked: boolean\r\n}\r\n\r\nexport enum MainPageActionTypes {\r\n    SET_USER_LOGIN = \"SET_USER_LOGIN\",\r\n    SET_LOGIN_FAILED = \"SET_LOGIN_FAILED\",\r\n    SET_SIGN_UP_CLICKED = \"SET_SIGN_UP_CLICKED\",\r\n}\r\n\r\ninterface SetUserLoginAction {\r\n    type: MainPageActionTypes.SET_USER_LOGIN,\r\n    payload: boolean\r\n}\r\n\r\ninterface SetLoginFailedAction {\r\n    type: MainPageActionTypes.SET_LOGIN_FAILED,\r\n    payload: boolean\r\n}\r\n\r\ninterface SetSignUpClickedAction {\r\n    type: MainPageActionTypes.SET_SIGN_UP_CLICKED,\r\n    payload: boolean\r\n}\r\n\r\nexport type MainPageAction = SetUserLoginAction | SetLoginFailedAction | SetSignUpClickedAction;\r\n\r\n","import {MainPageAction, MainPageActionTypes, MainPageStateTypes} from \"../types/store/MainPageStateTypes\";\r\n\r\nconst defaultState: MainPageStateTypes = {\r\n    isUserLogged: false,\r\n    loginFailed: false,\r\n    signUpClicked: false\r\n}\r\n\r\nexport const mainPageReducer = (state = defaultState, action: MainPageAction): MainPageStateTypes => {\r\n    switch (action.type) {\r\n        case MainPageActionTypes.SET_USER_LOGIN:\r\n            return {...state, isUserLogged: action.payload}\r\n        case MainPageActionTypes.SET_LOGIN_FAILED:\r\n            return {...state, loginFailed: action.payload}\r\n        case MainPageActionTypes.SET_SIGN_UP_CLICKED:\r\n            return {...state, signUpClicked: action.payload}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","export interface UserStateTypes {\r\n    name: string,\r\n    surname: string,\r\n    email: string,\r\n    id?: string,\r\n    data: any[]\r\n}\r\n\r\nexport enum UserStateActionsTypes {\r\n    ADD_NEW_USER_DATA = \"ADD_NEW_USER_DATA\",\r\n    ADD_NEW_TODO = \"ADD_NEW_TODO\",\r\n    CHANGE_TODO = \"CHANGE_TODO\",\r\n    DELETE_TODO = \"DELETE_TODO\",\r\n    DELETE_ALL = \"DELETE_ALL\",\r\n    INITIALIZE = \"INITIALIZE\"\r\n}\r\n\r\ninterface AddNewUserDataAction {\r\n    type: UserStateActionsTypes.ADD_NEW_USER_DATA,\r\n    payload: object\r\n}\r\n\r\ninterface InitializeAction {\r\n    type: UserStateActionsTypes.INITIALIZE\r\n}\r\n\r\ninterface ClearTasks {\r\n    type: UserStateActionsTypes.DELETE_ALL\r\n}\r\n\r\ninterface AddNewTodoAction {\r\n    type: UserStateActionsTypes.ADD_NEW_TODO,\r\n    payload: {\r\n        task: string\r\n    }\r\n}\r\n\r\ninterface ChangeTodoAction {\r\n    type: UserStateActionsTypes.CHANGE_TODO,\r\n    payload: {\r\n        index: number,\r\n        task: string\r\n    }\r\n}\r\n\r\ninterface DeleteTodoAction {\r\n    type: UserStateActionsTypes.DELETE_TODO,\r\n    payload: {\r\n        index: number\r\n    }\r\n}\r\n\r\nexport type UserStateAction = InitializeAction | ClearTasks | AddNewTodoAction | AddNewUserDataAction | ChangeTodoAction | DeleteTodoAction","import {UserStateAction, UserStateActionsTypes, UserStateTypes} from \"../types/store/UserStateTypes\";\r\n\r\nconst defaultState: UserStateTypes = {\r\n    name: \"\",\r\n    surname: \"\",\r\n    email: \"\",\r\n    id: \"\",\r\n    data: []\r\n}\r\n\r\nexport const userDataReducer = (state = defaultState, action: UserStateAction) => {\r\n    switch (action.type) {\r\n        case UserStateActionsTypes.ADD_NEW_USER_DATA:\r\n            return {...state, ...action.payload}\r\n        case UserStateActionsTypes.ADD_NEW_TODO:\r\n            return {...state, data: [...state.data, action.payload]}\r\n        case UserStateActionsTypes.DELETE_ALL:\r\n            return {...state, data: []}\r\n        case UserStateActionsTypes.CHANGE_TODO:\r\n            let newChangedData = [...state.data];\r\n            newChangedData[action.payload.index] = {task: action.payload.task}\r\n            return {...state, data: newChangedData}\r\n        case UserStateActionsTypes.DELETE_TODO:\r\n            return {...state, data: state.data.filter((item, index) => index !== action.payload.index)}\r\n        case UserStateActionsTypes.INITIALIZE:\r\n            state=defaultState\r\n            return state\r\n        default:\r\n                return {...state}\r\n    }\r\n}\r\n\r\n\r\n\r\n","import {createStore, combineReducers} from \"redux\";\r\nimport {userRegisterReducer} from \"./userRegisterReducer\";\r\nimport {userLoginReducer} from \"./userLoginReducers\";\r\nimport {mainPageReducer} from \"./mainPageReducer\";\r\nimport {userDataReducer} from \"./userDataReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n    userRegister: userRegisterReducer,\r\n    userLogin: userLoginReducer,\r\n    mainPageInfo: mainPageReducer,\r\n    userData: userDataReducer\r\n})\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>;\r\n\r\nexport const Store = createStore(rootReducer)","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport {Provider} from 'react-redux';\nimport {Store} from './Store';\n\nReactDOM.render(\n    <Provider store={Store}>\n        <React.StrictMode>\n            <App />\n        </React.StrictMode>\n    </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}